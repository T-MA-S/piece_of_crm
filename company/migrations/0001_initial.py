# Generated by Django 4.0.4 on 2022-08-23 06:39

from django.db import migrations, models
import django.utils.timezone
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CompanyBranch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('industry', models.CharField(max_length=255, verbose_name='Индустрия')),
                ('industry_en', models.CharField(max_length=255, null=True, verbose_name='Индустрия')),
                ('industry_ru', models.CharField(max_length=255, null=True, verbose_name='Индустрия')),
            ],
            options={
                'verbose_name': 'Индустрия',
                'verbose_name_plural': 'Индустрии',
            },
        ),
        migrations.CreateModel(
            name='CompanySizes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(max_length=128, verbose_name='Размер')),
            ],
            options={
                'verbose_name': 'Размер',
                'verbose_name_plural': 'Размеры',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128, verbose_name='Имя')),
                ('surname', models.CharField(max_length=128, verbose_name='Фамилия')),
                ('middle_name', models.CharField(max_length=128, verbose_name='Отчество')),
                ('email', models.EmailField(max_length=128, verbose_name='Email')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, verbose_name='Номер телефона')),
                ('position_in_company', models.CharField(max_length=128, verbose_name='Позиция в компании')),
            ],
            options={
                'verbose_name': 'Контакт',
                'verbose_name_plural': 'Контакты',
            },
        ),
        migrations.CreateModel(
            name='ContactCompany',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('company_name', models.CharField(max_length=128, verbose_name='Название компании')),
                ('company_site', models.URLField(max_length=128, verbose_name='Сайт компании')),
                ('location', models.CharField(default=None, max_length=255, null=True, verbose_name='Локация')),
                ('phone_number', models.CharField(default=None, max_length=18, null=True, verbose_name='Номер телефона')),
                ('description', models.TextField(default=None, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Компания контакта',
                'verbose_name_plural': 'Компании контактов',
            },
        ),
        migrations.CreateModel(
            name='FindEmails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=128, verbose_name='Найденный имейл')),
                ('status', models.CharField(choices=[('VALID', 'Valid'), ('PROBABLY', 'Probably valid'), ('INVALID', 'Invalid')], default='VALID', max_length=10)),
            ],
            options={
                'verbose_name': 'Найденная почта',
                'verbose_name_plural': 'Найденные почты',
            },
        ),
        migrations.CreateModel(
            name='List',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('list_name', models.CharField(max_length=128, verbose_name='Имя списка')),
            ],
            options={
                'verbose_name': 'Список',
                'verbose_name_plural': 'Списки',
            },
        ),
        migrations.CreateModel(
            name='ListContainer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='NewsletterTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('newsletter_name', models.CharField(max_length=128, verbose_name='Название рассылки')),
                ('sequence', models.TextField(null=True, verbose_name='Sequence')),
                ('visual', models.TextField(verbose_name='Visual')),
                ('data', models.TextField(verbose_name='Data')),
                ('pop_up_data', models.TextField(verbose_name='PopUps Data')),
            ],
        ),
        migrations.CreateModel(
            name='NewsletterTemplatesList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('list_name', models.CharField(max_length=128, verbose_name='List Name')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('UNREAD', 'Unread'), ('READ', 'Read'), ('DELETED', 'Deleted')], max_length=20)),
                ('text', models.CharField(max_length=10000)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Уведомление',
                'verbose_name_plural': 'Уведомления',
            },
        ),
        migrations.CreateModel(
            name='RequestsForSearch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Имя (Кириллица)')),
                ('surname', models.CharField(max_length=128, verbose_name='Фамилия (Кириллица)')),
                ('name_lat', models.CharField(max_length=128, verbose_name='Имя (Латиница)')),
                ('surname_lat', models.CharField(max_length=128, verbose_name='Фамилия (Латиница)')),
                ('company_domain', models.CharField(max_length=30, verbose_name='Домен')),
            ],
            options={
                'verbose_name': 'Запрос с поиска',
                'verbose_name_plural': 'Запросы с поиска',
            },
        ),
        migrations.CreateModel(
            name='SendingMails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(verbose_name='Message')),
                ('theme', models.CharField(max_length=128, verbose_name='Theme')),
                ('link', models.CharField(max_length=128, verbose_name='Recipient')),
                ('status', models.CharField(choices=[(1, 'Pending'), (2, 'Delivered'), (3, 'Error'), (4, 'Opened'), (5, 'Cancelled')], max_length=128, verbose_name='Status')),
                ('date', models.DateTimeField()),
                ('active', models.BooleanField(verbose_name='Active')),
                ('template_name', models.TextField(null=True)),
                ('opened_at', models.DateTimeField(null=True)),
                ('conditions', models.TextField(null=True, verbose_name='conditions')),
                ('error_description', models.TextField(null=True, verbose_name='error_description')),
                ('opened_at_visual', models.TextField(null=True, verbose_name='opened_at_visual')),
            ],
            options={
                'verbose_name': 'Письмо для отправки',
                'verbose_name_plural': 'Письма для отправки',
            },
        ),
        migrations.CreateModel(
            name='SendingMailsList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('list_name', models.CharField(max_length=128, verbose_name='Название листа')),
            ],
            options={
                'verbose_name': 'Список рассылок',
                'verbose_name_plural': 'Списки рассылок',
            },
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template_name', models.CharField(max_length=128, null=True, verbose_name='Template Name')),
                ('subject_line', models.CharField(max_length=128, verbose_name='Subject line')),
                ('message', models.TextField(verbose_name='Message')),
            ],
        ),
        migrations.CreateModel(
            name='TemplatesList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('list_name', models.CharField(max_length=128, verbose_name='List Name')),
            ],
        ),
        migrations.CreateModel(
            name='UserLocalVariable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название')),
                ('name_en', models.CharField(max_length=128, null=True, verbose_name='Название')),
                ('name_ru', models.CharField(max_length=128, null=True, verbose_name='Название')),
                ('variable', models.CharField(max_length=128, verbose_name='Переменная')),
            ],
        ),
    ]
